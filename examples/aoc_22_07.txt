result@{
    input = "$ cd /
$ ls
dir a
14848514 b.txt
8504156 c.dat
dir d
$ cd a
$ ls
dir e
29116 f
2557 g
62596 h.lst
$ cd e
$ ls
584 i
$ cd ..
$ cd ..
$ cd d
$ ls
4060174 j
8033020 d.log
5626152 d.ext
7214296 k"
    
    parse_command_string = in command_string out
        clear_item!("" split!(newline drop!command_string))
    command_strings = drop!split!('$' input)
    commands = map_stack!(parse_command_string command_strings)

    state = {
        current_directory = ""
        file_and_parent = <"/": "">
        file_and_size = <>
    }
    handle_ls = in (command state) out {
        current_directory = current_directory@state
        file_and_parent = file_and_parent@state
        file_and_size = file_and_size@state
        command = drop!command
        while command
            parts = split!(' ' take!command)
            size = first!parts
            file = second!parts
            file_and_parent = put!((file current_directory) file_and_parent)
            file_and_size = is take!size
                'd' then file_and_size
                else put!((file parse_natural_number!size) file_and_size)
            command = drop!command
        end
    }
    handle_cd = in (command state) out {
        current_directory = current_directory@state
        file_and_parent = file_and_parent@state
        file_and_size = file_and_size@state
        new_directory = drop_many!(3 take!command)
        current_directory = is new_directory
            ".." then get!(current_directory file_and_parent "/")
            else new_directory
    }
    handle_command = in (command state) out is take!take!command
        'c' then handle_cd!(command state)
        'l' then handle_ls!(command state)
        else state
    state = fold!(handle_command commands state)
    
    get_parents_and_size = in (file_and_size file_and_parent) out parents_and_size@{
        children = get_keys!file_and_size
        parents_and_size = <>
        while children
            child = take!children
            parent = get!(child file_and_parent "/")
            parent_size = get!(parent parents_and_size 0)
            child_size = get!(child file_and_size 0)
            total_size = add!(parent_size child_size)
            parents_and_size = is child
                "/" then parents_and_size
                else put!((parent total_size) parents_and_size)
            children = drop!children
        end
    }
    
    file_and_parent = file_and_parent@state
    file_and_size = file_and_size@state
    total_file_and_size = make_table!file_and_size 
    
    while file_and_size
        file_and_size = get_parents_and_size!(file_and_size file_and_parent)        
        parents = get_keys!file_and_size
        while parents
            parent = take!parents
            old_parent_size = get!(parent total_file_and_size 0)
            parent_increment = get!(parent file_and_size 0)
            new_parent_size = add!(old_parent_size parent_increment)
            total_file_and_size = put!((parent new_parent_size) total_file_and_size)
            parents = drop!parents
        end
    end
    
    result = total_file_and_size
}
