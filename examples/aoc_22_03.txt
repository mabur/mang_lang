result@{
    input =
"vJrwpWtwJgWrhcsFMMfFFhFp
jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL
PmmdzqPrVvPwwTWBwg
wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn
ttgJtRGJQctTZtZT
CrZsJsPPZsGzwwsLwLmpwMDw"

    common_item = in string out result@{
        size = count!string
        half_size = div!(size 2)
        first_string = take_many!(half_size string)
        second_string = drop_many!(half_size string)
        products = cartesian_product2!(first_string second_string)
        pick_first = in (a b) out a
        result = pick_first!take!drop_while!(unequal products)
    }
    priority = in c out
        if is_lower?c then
            add!(sub!(number!c number!'a') 1)
        else
            add!(sub!(number!c number!'A') 27)
    common_items = map_stack!(common_item split!(newline input))
    priorities = map_stack!(priority common_items)
    result = sum!priorities
}
