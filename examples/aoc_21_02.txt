result@{
    commands = (
"forward 5"
"down 5"
"forward 8"
"up 3"
"down 8"
"forward 2"
    )
    parse_up = in command out parse_digit!fourth!command
    parse_down = in command out parse_digit!sixth!command
    parse_forward = in command out parse_digit!ninth!command    
    move = in (command position) out is top@command
        \d then
            (first!position add!(second!position parse_down!command))
        \u then
            (first!position sub!(second!position parse_up!command))
        else
            (add!(first!position parse_forward!command) second!position)
    start = (0 0)
    position = fold!(move commands start)
    result = mul!position
}
