result@{
    start = "NNCB"
    rules = [
        ("CH" 'B')
        ("HH" 'N')
        ("CB" 'H')
        ("NH" 'C')
        ("HB" 'C')
        ("HC" 'B')
        ("HN" 'C')
        ("NN" 'C')
        ("BH" 'H')
        ("NC" 'B')
        ("NB" 'B')
        ("BN" 'B')
        ("BB" 'N')
        ("BC" 'B')
        ("CC" 'N')
        ("CN" 'C')
    ]
    polymer = start
    n = 10
    while n
        result = ""
        while drop!polymer
            a = polymer!0
            b = polymer!1
            prefix = put_each!([b a] "")
            remaining_rules = rules
            while remaining_rules
                rule = take!remaining_rules
                prefix =
                    if drop!drop!prefix then
                        prefix
                    else if equal?(rule!0 prefix) then
                        put_each!([b rule!1 a] "")
                    else
                        prefix
                remaining_rules = drop!remaining_rules
            end
            while drop!prefix
                result += take!prefix
                prefix = drop!prefix
            end
            polymer = drop!polymer
        end
        result += take!polymer
        polymer = reverse!result
        n = dec!n
    end
    result = polymer

    alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    counts = map_stack!(in c out count_item!(c polymer) alphabet)
    counts = clear_if!(in c out equal?(c 0) counts)
    result = sub!(max_item!counts min_item!counts)
} 
