result@{
    start = "NNCB"
    rules = [
        ["CH" 'B']
        ["HH" 'N']
        ["CB" 'H']
        ["NH" 'C']
        ["HB" 'C']
        ["HC" 'B']
        ["HN" 'C']
        ["NN" 'C']
        ["BH" 'H']
        ["NC" 'B']
        ["NB" 'B']
        ["BN" 'B']
        ["BB" 'N']
        ["BC" 'B']
        ["CC" 'N']
        ["CN" 'C']
    ]
    polymer = start
    n = 10
    while n
        result = ""
        while drop!polymer
            a = first!polymer
            b = second!polymer
            prefix = put_each!([b a] "")
            remaining_rules = rules
            while remaining_rules
                rule = take!remaining_rules
                prefix =
                    if drop!drop!prefix then
                        prefix
                    else if equal?(first!rule prefix) then
                        put_each!([b second!rule a] "")
                    else
                        prefix
                remaining_rules = drop!remaining_rules
            end
            while drop!prefix
                result = put!(take!prefix result)
                prefix = drop!prefix
            end
            polymer = drop!polymer
        end
        result = put!(take!polymer result)
        polymer = reverse!result
        n = dec!n
    end
    result = polymer

    alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    counts = map_stack!(in c out count_item!(c polymer) alphabet)
    counts = clear_if!(in c out equal?(c 0) counts)
    result = sub!(max_item!counts min_item!counts)
} 
