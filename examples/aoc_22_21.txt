result@{
    input =
"root: pppw + sjmn
dbpl: 5
cczh: sllz + lgvd
zczc: 2
ptdq: humn - dvpt
dvpt: 3
lfqf: 4
humn: 5
ljgn: 2
sjmn: drzm * dbpl
sllz: 4
pppw: cczh / lfqf
lgvd: ljgn * ptdq
drzm: hmdt - zczc
hmdt: 32"

    parse_line = in string out (take_many!(4 string) drop_many!(6 string))    
    monkey_strings = map_table!(parse_line split!(newline input))
    operations = <'+':add '-':sub '*':mul '/':div>
    evaluate_operation = in string out result@{
        left = evaluate_node!take_many!(4 string)
        right = evaluate_node!drop_many!(7 string)
        operation = operations!string!5
        result = operation!(left right)
    }
    evaluate_node = in key out result@{
        string = monkey_strings!key
        result =
            if is_digit?take!string then
                parse_natural_number!string
            else
                evaluate_operation!string
    }
    result = evaluate_node!"root"
}
